name: $(rev:r)
jobs:
  - job: Build_PS_Win2016
    pool:
      vmImage: vs2017-win2016

    steps:
    - powershell: |
        .\build.ps1 -Verbose
      displayName: 'Build and Test'
      env:
        azureApplicationId: $(azureApplicationId)
        azureApplicationPassword: $(azureApplicationPassword)
        azureSubscriptionId: $(azureSubscriptionId)
        azureTenantId: $(azureTenantId)

    - task: PublishTestResults@2
      inputs:
        testRunner: 'NUnit'
        testResultsFiles: '**/TestResults.xml'
        testRunTitle: 'PS_Win2016'
      displayName: 'Publish Test Results'
      condition: in(variables['Agent.JobStatus'], 'Succeeded', 'SucceededWithIssues', 'Failed')

    - task: PublishBuildArtifacts@1
      inputs:
        pathtoPublish: 'staging/CosmosDB'
        artifactName: 'CosmosDB'
      displayName: 'Publish Module'

    - task: PublishBuildArtifacts@1
      inputs:
        pathtoPublish: 'staging/zip'
        artifactName: 'zip'
      displayName: 'Publish Module'

    - task: PublishBuildArtifacts@1
      inputs:
        pathtoPublish: 'psakefile.ps1'
        artifactName: 'scripts'
      displayName: 'Publish PSake File'

    - task: PublishBuildArtifacts@1
      inputs:
        pathtoPublish: 'cosmosdb.depend.psd1'
        artifactName: 'scripts'
      displayName: 'Publish PSDepend File'

    - task: PublishBuildArtifacts@1
      inputs:
        pathtoPublish: 'build.ps1'
        artifactName: 'scripts'
      displayName: 'Publish Build File'

  - job: Build_PSCore_Ubuntu1604
    pool:
      vmImage: ubuntu-16.04

    steps:
    - script: |
        curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
        curl https://packages.microsoft.com/config/ubuntu/16.04/prod.list | sudo tee /etc/apt/sources.list.d/microsoft.list
        sudo apt-get update
        sudo apt-get install -y powershell
      displayName: 'Install PowerShell Core'

    - script: |
        pwsh -c '.\build.ps1'
      displayName: 'Build and Test'
      env:
        azureApplicationId: $(azureApplicationId)
        azureApplicationPassword: $(azureApplicationPassword)
        azureSubscriptionId: $(azureSubscriptionId)
        azureTenantId: $(azureTenantId)

    - task: PublishTestResults@2
      inputs:
        testRunner: 'NUnit'
        testResultsFiles: '**/TestResults.xml'
        testRunTitle: 'PSCore_Ubuntu1604'
      displayName: 'Publish Test Results'
      condition: in(variables['Agent.JobStatus'], 'Succeeded', 'SucceededWithIssues', 'Failed')

  - job: Build_PSCore_MacOS1013
    pool:
      vmImage: xcode9-macos10.13

    steps:
    - script: |
        brew update
        brew tap caskroom/cask
        brew cask install powershell
      displayName: 'Install PowerShell Core'

    - script: |
        pwsh -c '.\build.ps1'
      displayName: 'Build and Test'
      env:
        azureApplicationId: $(azureApplicationId)
        azureApplicationPassword: $(azureApplicationPassword)
        azureSubscriptionId: $(azureSubscriptionId)
        azureTenantId: $(azureTenantId)

    - task: PublishTestResults@2
      inputs:
        testRunner: 'NUnit'
        testResultsFiles: '**/TestResults.xml'
        testRunTitle: 'PSCore_MacOS1013'
      displayName: 'Publish Test Results'
      condition: in(variables['Agent.JobStatus'], 'Succeeded', 'SucceededWithIssues', 'Failed')
